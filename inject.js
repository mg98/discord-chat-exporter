const authToken = (
    webpackChunkdiscord_app.push(
        [
            [''],
            {},
            e => {
                m=[];
                for(let c in e.c)
                    m.push(e.c[c])
            }
        ]
    ),
    m
).find(
    m => m?.exports?.default?.getToken !== void 0
).exports.default.getToken()

function convertToTSV(data) {
    function escapeAndQuote(str) {
        if (str === null || str === undefined) {
            return '""';
        }
        return '"' + String(str).replace(/"/g, '""').replace(/\n/g, ' ') + '"';
    }

    const headers = Object.keys(data[0]);
    const tsv = [
        headers.map(header => escapeAndQuote(header)).join('\t'), 
        ...data.map(row => 
            headers.map(field => escapeAndQuote(row[field])).join('\t') 
        )
    ].join('\n');

    return tsv;
}

function downloadTSV(tsvString, filename) {
    const blob = new Blob([tsvString], { type: 'text/tab-separated-values' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = filename;
    a.click();
    URL.revokeObjectURL(url);
}

const downloadIcon = `<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M5.25589 16C3.8899 15.0291 3 13.4422 3 11.6493C3 9.20008 4.8 6.9375 7.5 6.5C8.34694 4.48637 10.3514 3 12.6893 3C15.684 3 18.1317 5.32251 18.3 8.25C19.8893 8.94488 21 10.6503 21 12.4969C21 14.0582 20.206 15.4339 19 16.2417M12 21V11M12 21L9 18M12 21L15 18" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
    </svg>`
const loadingSpinner = `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" style="margin: auto; background: none; display: block; shape-rendering: auto;" width="24px" height="24px" viewBox="0 0 100 100" preserveAspectRatio="xMidYMid">
<circle cx="50" cy="50" fill="none" stroke="currentColor" stroke-width="14" r="32" stroke-dasharray="150.79644737231007 52.26548245743669">
  <animateTransform attributeName="transform" type="rotate" repeatCount="indefinite" dur="2.564102564102564s" values="0 50 50;360 50 50" keyTimes="0;1"></animateTransform>
</circle>
<!-- [ldio] generated by https://loading.io/ --></svg>`

async function handleClick(btn) {
    let data = []
    let lastID;

    const urlParts = window.location.href.split("/")
    const channelID = urlParts[urlParts.length - 1]
    delete urlParts

    btn.innerHTML = loadingSpinner
    try {

        while (true) {
            const response = await fetch(
                `https://discord.com/api/v9/channels/${channelID}/messages?limit=100${lastID ? '&before='+lastID : ''}`, {
                  "headers": {
                    "accept": "*/*",
                    "accept-language": "en-US,en;q=0.9,de-DE;q=0.8,de;q=0.7,fr;q=0.6,vi;q=0.5",
                    "authorization": authToken,
                  },
                  "referrer": window.location.href,
                  "referrerPolicy": "strict-origin-when-cross-origin",
                  "body": null,
                  "method": "GET",
                  "mode": "cors",
                  "credentials": "include"
                })

            let messages = await response.json()
            lastID = messages.length && messages[messages.length-1].id
            messages = messages.map(m => ({ timestamp: m.timestamp, author: m.author.username, message: m.content }))
            data.push(...messages)
            
            if (messages.length === 0) break
        }

        data = data.slice().reverse()
        const tsvString = convertToTSV(data)
        downloadTSV(tsvString, `chat${channelID}.tsv`);
    } catch (e) {
        console.error(e)
    } finally {
        btn.innerHTML = downloadIcon
    }
}

function addButton() {
    const toolbar = document.querySelector("[class^='upperContainer_'] > [class^='toolbar_']");
    // Check if the button already exists
    if (toolbar.querySelector("[aria-label='Export chat history']")) {
        return
    }

    const btn = toolbar.firstChild.cloneNode();
    btn.setAttribute('aria-label', 'Export chat history')
    btn.innerHTML = downloadIcon
    btn.onclick = function() {
        handleClick(this)
    };
    toolbar.insertBefore(btn, toolbar.firstChild)
}

window.onload = function() {
    setTimeout(addButton, 1100)
}